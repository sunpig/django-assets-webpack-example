# Separate settings file purely for use in collectstatic process to generate
# hash-named files for production (nginx/uwsgi) environments
from .settings import *  # noqa

DEBUG = False

STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

# Static assets:
# * node/gulp pipeline compiles and minified js/sass
#   and puts them into build/static/optimized
# * collectstatic (using ManifestStaticFilesStorage) takes files from
#   build/static/optimized, calculates hashes, and puts hash-renamed
#   files into build/static/prod
# * deploy_local_prod script takes files from build/static/prod and
#   copies them to the assets folder in the relevant prod environment
# * In production, nginx serves the hash-named files


# At main server runtime, this is the path that django presents to clients in its generated HTML output.
STATIC_URL = '/static/'

# When we run the `collectstatic` command, it will look here for the static files
# generated by the node/gulp pipeline. It also looks in the /static/ folder
# for each installed app (this project, and third-party apps).
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, '..', 'build/static/optimized')
]

# This is where `collectstatic` puts the hash-renamed files.
STATIC_ROOT = os.path.join(BASE_DIR, '..', 'build/static/prod')
